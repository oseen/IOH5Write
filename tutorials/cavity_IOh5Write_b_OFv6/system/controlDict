/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     icoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.5;

deltaT          0.005;

writeControl    timeStep;

writeInterval   20;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{

    h5Data
    {
        // Write the solution (Eulerian and Lagrangian fields)
        // into a HDF5 container
        type                h5Write;

        // Where to load it from
        functionObjectLibs  ( "libIOh5Write.so" );

        // bool to suppress internal field data writing (default = false --> internal field data is written)
        suppressFieldDataWrite false;

        // Volume fields to write
        objectNames         ( U p );

        patchNames          ( movingWall fixedWalls); // no patches to write --> leave blank patchNames ();

        // Kinematic clouds to write (leave blank to skip --> (); )
        cloudNames          (  );

        // Attributes to write for particles. Valid choices are:
        //  - origProc        = Original process (from where it was injected)
        //  - origId          = ID on orignal process
        //  - cell            = Current cell (on local process)
        //  - currProc        = Current process
        //  - rho             = Particle density
        //  - d               = Particle diameter
        //  - age             = Particle age
        //  - position        = Position in space
        //  - U               = Particle velocity
        //  - Us              = Slip velocity Us = U - Uc
        cloudAttribs        (  );

        // HDF5 chunk size (in number of bytes, 0 = no chunking)
        chunkSize           0;

        //writeControl    timeStep;

        // Write interval (in number of iterations)
        writeInterval       5;
    }
}
// ************************************************************************* //
